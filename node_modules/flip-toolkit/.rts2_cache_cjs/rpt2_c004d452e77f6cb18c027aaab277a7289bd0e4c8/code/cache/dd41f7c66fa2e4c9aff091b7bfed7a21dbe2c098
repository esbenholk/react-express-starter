{"code":"import gestureHandlers from './gestureHandlers';\r\nconst defaultCompleteThreshhold = 0.15;\r\nconst getMovementScalar = ({ deltaX, deltaY, direction }) => {\r\n    const normalized = {\r\n        up: -deltaY,\r\n        down: deltaY,\r\n        left: -deltaX,\r\n        right: deltaX\r\n    };\r\n    return normalized[direction];\r\n};\r\nconst cleanUpAnimation = (inProgressAnimations, flipId) => {\r\n    if (inProgressAnimations[flipId] && inProgressAnimations[flipId].spring) {\r\n        inProgressAnimations[flipId].spring.destroy();\r\n    }\r\n    delete inProgressAnimations[flipId];\r\n};\r\nconst makeFinishFunction = (endValue) => {\r\n    return ({ inProgressAnimations, onFinished, velocity = 1 }) => {\r\n        const springsCompleted = Object.keys(inProgressAnimations).map(flipId => {\r\n            const { spring, onAnimationEnd } = inProgressAnimations[flipId];\r\n            if (!spring) {\r\n                return Promise.reject();\r\n            }\r\n            if (Object.keys(spring._cachedSpringConfig).length) {\r\n                spring.setSpringConfig(spring._cachedSpringConfig);\r\n            }\r\n            spring\r\n                .setVelocity(Math.max(Math.min(velocity, 15), 2))\r\n                .setEndValue(endValue);\r\n            return new Promise((resolve, reject) => {\r\n                spring.addOneTimeListener({\r\n                    onSpringAtRest: (spring) => {\r\n                        // if not 1/0, assume this has been interrupted by subsequent gesture animation\r\n                        if (spring.getCurrentValue() !== endValue) {\r\n                            return reject();\r\n                        }\r\n                        resolve();\r\n                        // otherwise transforms will be removed from cancelled flip causing jitter\r\n                        endValue === 1 && onAnimationEnd();\r\n                        cleanUpAnimation(inProgressAnimations, flipId);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        Promise.all(springsCompleted).then(onFinished);\r\n    };\r\n};\r\nconst finishFlip = makeFinishFunction(1);\r\nconst cancelFlip = makeFinishFunction(0);\r\nconst updateSprings = ({ inProgressAnimations, percentage }) => {\r\n    Object.keys(inProgressAnimations).forEach(flipId => {\r\n        const spring = inProgressAnimations[flipId].spring;\r\n        if (!Object.keys(spring._cachedSpringConfig).length) {\r\n            inProgressAnimations[flipId].spring._cachedSpringConfig =\r\n                inProgressAnimations[flipId].spring._springConfig;\r\n        }\r\n        spring.setSpringConfig({\r\n            tension: 300,\r\n            friction: 26\r\n        });\r\n        inProgressAnimations[flipId].spring.setEndValue(percentage);\r\n    });\r\n};\r\nconst getDirection = (deltaX, deltaY) => {\r\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\r\n        return deltaX > 0 ? 'right' : 'left';\r\n    }\r\n    return deltaY > 0 ? 'down' : 'up';\r\n};\r\nclass Swipe {\r\n    constructor(props) {\r\n        this.props = props;\r\n        this.flipInitiatorData = undefined;\r\n        this.isFinishing = false;\r\n        this.prevProps = {};\r\n        const { handlers, set } = gestureHandlers({\r\n            onAction: this.onAction.bind(this),\r\n            config: this.props\r\n        });\r\n        this.handlers = handlers;\r\n        this.set = set;\r\n    }\r\n    onAction({ velocity, delta: [deltaX, deltaY], down, first }) {\r\n        if (this.isFinishing)\r\n            return;\r\n        if (first && deltaX + deltaY === 0)\r\n            return;\r\n        const { inProgressAnimations, setIsGestureInitiated, ...rest } = this.props;\r\n        const flipId = String(this.props.flipId);\r\n        if (!inProgressAnimations || !setIsGestureInitiated) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                // eslint-disable-next-line no-console\r\n                console.error('[react-flip-toolkit] No parent Flipper component detected for this Swipe component');\r\n            }\r\n            return;\r\n        }\r\n        const generalFlipInProgress = Boolean(Object.keys(inProgressAnimations).length);\r\n        const onFlipCancelled = () => {\r\n            this.flipInitiatorData &&\r\n                this.flipInitiatorData.cancelFlip({\r\n                    props: this.props,\r\n                    prevProps: this.prevProps\r\n                });\r\n            delete this.flipInitiatorData;\r\n            this.isFinishing = false;\r\n        };\r\n        // TODO: figure out why the typings don't work :/\r\n        const config = ['left', 'right', 'up', 'down']\r\n            .map(direction => {\r\n            // @ts-ignore\r\n            if (!rest[direction])\r\n                return null;\r\n            return Object.assign({\r\n                direction,\r\n                threshold: this.props.threshold || defaultCompleteThreshhold\r\n            }, \r\n            // @ts-ignore\r\n            rest[direction]);\r\n        })\r\n            .filter(Boolean);\r\n        const initiateGestureControlledFLIP = (configMatchingCurrentDirection) => {\r\n            // we have to cache all config BEFORE calling initFlip\r\n            // which can dramatically change the UI and/or the FLIP config\r\n            // that the component has\r\n            // copying it for safety but maybe that isnt necessary\r\n            this.flipInitiatorData = Object.assign({}, configMatchingCurrentDirection);\r\n            // reset the initial arg so that we are calculating gesture delta from the current mouse position\r\n            // this will make interrupted/edge case scenarios smoother\r\n            this.set(state => {\r\n                return Object.assign({}, state, { initial: state.xy });\r\n            });\r\n            setIsGestureInitiated(true);\r\n            configMatchingCurrentDirection.initFlip({\r\n                props: this.props,\r\n                prevProps: this.prevProps\r\n            });\r\n            // must call this func this after getSnapshotBeforeUpdate has run!\r\n            const afterFLIPHasBeenInitiated = () => {\r\n                // maybe gesture occurred but component didn't change posiition\r\n                if (!inProgressAnimations[flipId]) {\r\n                    delete this.flipInitiatorData;\r\n                    return;\r\n                }\r\n                Object.keys(inProgressAnimations).forEach(inProgressAnimationFlipId => {\r\n                    if (flipId) {\r\n                        // @ts-ignore\r\n                        inProgressAnimations[inProgressAnimationFlipId].flipInitiator = flipId;\r\n                    }\r\n                });\r\n            };\r\n            setTimeout(afterFLIPHasBeenInitiated, 0);\r\n        };\r\n        const currentDirection = getDirection(deltaX, deltaY);\r\n        const configMatchingCurrentDirection = config.filter(configEntry => configEntry.direction === currentDirection)[0];\r\n        if (!generalFlipInProgress) {\r\n            if (!configMatchingCurrentDirection) {\r\n                return;\r\n            }\r\n            return initiateGestureControlledFLIP(configMatchingCurrentDirection);\r\n        }\r\n        if (!this.flipInitiatorData) {\r\n            return;\r\n        }\r\n        const returnToUnFlippedState = () => {\r\n            this.isFinishing = true;\r\n            cancelFlip({\r\n                velocity,\r\n                inProgressAnimations,\r\n                onFinished: onFlipCancelled\r\n            });\r\n        };\r\n        if (this.flipInitiatorData.direction !== currentDirection) {\r\n            // user might have done a mouseup while moving in another direction\r\n            if (generalFlipInProgress && !down) {\r\n                return returnToUnFlippedState();\r\n            }\r\n        }\r\n        const absoluteMovement = getMovementScalar({\r\n            deltaX,\r\n            deltaY,\r\n            direction: this.flipInitiatorData.direction\r\n        });\r\n        // must make sure not to call this when the user is starting a new gesture,\r\n        // only when finger has not been lifted\r\n        if (absoluteMovement <= 0 && !first) {\r\n            return onFlipCancelled();\r\n        }\r\n        const { translateXDifference, translateYDifference, prevRect, currentRect } = inProgressAnimations[flipId].difference;\r\n        const difference = Math.abs(['up', 'down'].indexOf(this.flipInitiatorData.direction) > -1\r\n            ? currentRect.height - prevRect.height + translateYDifference\r\n            : currentRect.width - currentRect.width + translateXDifference);\r\n        const percentage = absoluteMovement / difference;\r\n        // cancel flip -- this is interruptible if user\r\n        // tries to drag before animation is completed\r\n        if (!down && percentage < this.flipInitiatorData.threshold) {\r\n            return returnToUnFlippedState();\r\n        }\r\n        // gesture has gone far enough, animation can complete\r\n        if (percentage > this.flipInitiatorData.threshold) {\r\n            this.isFinishing = true;\r\n            return finishFlip({\r\n                velocity,\r\n                inProgressAnimations,\r\n                onFinished: () => {\r\n                    delete this.flipInitiatorData;\r\n                    delete this.isFinishing;\r\n                }\r\n            });\r\n        }\r\n        updateSprings({\r\n            percentage,\r\n            inProgressAnimations\r\n        });\r\n    }\r\n}\r\nexport default Swipe;\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/Swipe/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/alexholachek/Desktop/dev/react-flip-toolkit/packages/flip-toolkit/Swipe/index.d.ts","writeByteOrderMark":false,"text":"import { SwipeProps, SwipeEventHandlers, OnActionArgs } from './types';\r\ndeclare class Swipe {\r\n    props: SwipeProps;\r\n    private set;\r\n    handlers: SwipeEventHandlers;\r\n    private flipInitiatorData;\r\n    private isFinishing;\r\n    prevProps: {};\r\n    constructor(props: SwipeProps);\r\n    onAction({ velocity, delta: [deltaX, deltaY], down, first }: OnActionArgs): void;\r\n}\r\nexport default Swipe;\r\n"}}
